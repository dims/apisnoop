#+TITLE: Audit Kind Conformance Data
#+PROPERTY: header-args:sql+ :product postgres

* Summary
Track the steps necessary to get additional data from the audit kind conformance bucket

* The bucket
We want to get jobs from ci-kind-conformance-audit
We can see all the successful jobs with:
https://prow.k8s.io/job-history/kubernetes-jenkins/logs/ci-kubernetes-audit-kind-conformance

When you click on a job, just ensure it is a success and the artifacts contain an audit.log

* first pass
Ideally, and in the future, we'll be able to just run this command and it'll work.
#+BEGIN_SRC sql-mode
   select * from load_audit_events('ci-kubernetes-audit-kind-conformance', '1321145212524826624');
#+END_SRC


#+end_SRC

For now, we can expect some errors that we will need to correct in snooputil
** error 1: no jobResultsCache.json
because of this, we can't try to find the latest successful job.  for this new bucket, we just have to know the job we are trying to download.
#+RESULTS:
#+begin_SRC example
ERROR:  urllib.error.HTTPError: HTTP Error 404: Not Found
CONTEXT:  Traceback (most recent call last):
  PL/Python function "load_audit_events", line 14, in <module>
    bucket, job = determine_bucket_job(custom_bucket, custom_job)
  PL/Python function "load_audit_events", line 68, in determine_bucket_job
  PL/Python function "load_audit_events", line 58, in get_json
  PL/Python function "load_audit_events", line 221, in urlopen
  PL/Python function "load_audit_events", line 530, in open
  PL/Python function "load_audit_events", line 640, in http_response
  PL/Python function "load_audit_events", line 568, in error
  PL/Python function "load_audit_events", line 502, in _call_chain
  PL/Python function "load_audit_events", line 648, in http_error_default
PL/Python function "load_audit_events"
#+end_SRC
** error 2: no metadata in finished.json
#+BEGIN_SRC sql-mode
   select * from load_audit_events('ci-kubernetes-audit-kind-conformance', '1321145212524826624');
#+END_SRC

#+RESULTS:
#+begin_SRC example
ERROR:  KeyError: 'version'
CONTEXT:  Traceback (most recent call last):
  PL/Python function "load_audit_events", line 15, in <module>
    auditlog_file = download_and_process_auditlogs(bucket, job)
  PL/Python function "load_audit_events", line 268, in download_and_process_auditlogs
PL/Python function "load_audit_events"
#+end_SRC

this shows because we are trying to grab version from metadata that is not there.  We are using this to create our commit hash to determine where we pull our open api from.  For this new bucket, at least for now, we will only pull from master.

** error 3: no master file to compile from.
The audit logs are now stored in just `artifacts/audits`...so we can be less complex wsith finding all of them...we have a `get_all_auditlog_links` function that expects to find a line in the list with master in its title...but there won't be any there.  We will likely need to split the functionf or whether the bucket is the ~ci-kubernetes-audit-kind-conformance~ one or not.
#+RESULTS:
#+begin_SRC example
ERROR:  TypeError: 'NoneType' object is not subscriptable
CONTEXT:  Traceback (most recent call last):
  PL/Python function "load_audit_events", line 15, in <module>
    auditlog_file = download_and_process_auditlogs(bucket, job)
  PL/Python function "load_audit_events", line 274, in download_and_process_auditlogs
  PL/Python function "load_audit_events", line 118, in get_all_auditlog_links
PL/Python function "load_audit_events"
#+end_SRC

** error 4: no metadata for our load_audit_events sql function
We're now outta the woods of the snoopUtils functions, but have the same error as before: looking for metadata that isn't there.

#+begin_SRC example
ERROR:  KeyError: 'version'
CONTEXT:  Traceback (most recent call last):
  PL/Python function "load_audit_events", line 21, in <module>
    release = metadata["version"].split('-')[0].replace('v','')
PL/Python function "load_audit_events"
#+end_SRC
* and....let's try it again!
it worked!
#+BEGIN_SRC sql-mode
select * from load_audit_events('ci-kubernetes-audit-kind-conformance', '1321000499310235648');
#+END_SRC

#+RESULTS:
#+begin_SRC example
                              load_audit_events
------------------------------------------------------------------------------
 events for 1.20.0 loaded, from ci-kubernetes-audit-kind-conformance/1321000499310235648
(1 row)

#+end_SRC

* What do we have?
So!  if it all works, we should have three source files in our audit events.

#+BEGIN_SRC sql-mode
select distinct source from audit_event;
#+END_SRC

#+RESULTS:
#+begin_SRC example
                                                    source
---------------------------------------------------------------------------------------------------------------
 https://prow.k8s.io/view/gcs/kubernetes-jenkins/logs/ci-kubernetes-e2e-gci-gce/1321193833576271872
 https://prow.k8s.io/view/gcs/kubernetes-jenkins/logs/ci-kubernetes-gce-conformance-latest/1321108215349383168
(2 rows)

#+end_SRC

and we don't!  I must not be grabbing any actual audit logs.  i will need to look at our audit links function again.
